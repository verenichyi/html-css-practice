{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 2022,
    "sourceType": "module",
    "ecmaFeatures": {
      "modules": true
    }
  },
  "env": {
    "browser": true,
    "es6": true
  },
  "plugins": [
    "@typescript-eslint",
    "@typescript-eslint/eslint-plugin",
    "prettier"
  ],
  "extends": [
    "eslint:recommended",
    "airbnb",
    "airbnb-typescript",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "no-param-reassign": [
      "error",
      {
        "props": true,
        "ignorePropertyModificationsFor": [
          "state"
        ]
      }
    ],
    "camelcase": [
      "warn",
      {
        "ignoreDestructuring": true,
        "ignoreImports": true,
        "properties": "never"
      }
    ],
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 0
      }
    ],
    "no-useless-constructor": "warn",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "return",
          "break"
        ]
      },
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let"
        ],
        "next": [
          "const",
          "let"
        ]
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "if"
      },
      {
        "blankLine": "always",
        "prev": "if",
        "next": "*"
      }
    ],
    "@typescript-eslint/typedef": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_|^req|^next",
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        "allowTernary": true
      }
    ],
    "@typescript-eslint/no-empty-function": [
      "error",
      {
        "allow": [
          "constructors"
        ]
      }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "typeAlias",
        "format": [
          "PascalCase"
        ]
      }
    ]
  },
  "ignorePatterns": [
    "node_modules/",
    "build/"
  ]
}
